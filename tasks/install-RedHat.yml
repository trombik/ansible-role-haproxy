---

- name: Install required python modules to manage selinux on CentOS
  ansible.builtin.yum:
    name:
      - libselinux-python
      - policycoreutils-python
  when:
    - ansible_distribution == 'CentOS'

- name: Install required python modules to manage selinux on Fedora
  ansible.builtin.dnf:
    name:
      - python3-libselinux
      - python3-policycoreutils
      - policycoreutils-python-utils
  when:
    - ansible_distribution == 'Fedora'

- name: Install haproxy on CentOS
  ansible.builtin.yum:
    name: "{{ haproxy_package }}"
    state: present
  when:
    - ansible_distribution == 'CentOS'

- name: Install haproxy on Fedora
  ansible.builtin.dnf:
    name: "{{ haproxy_package }}"
    state: present
  when:
    - ansible_distribution == 'Fedora'

- name: Install haproxy_extra_packages on CentOS
  ansible.builtin.yum:
    name: "{{ haproxy_extra_packages }}"
    state: present
  when:
    - ansible_distribution == 'CentOS'

- name: Install haproxy_extra_packages on Fedora
  ansible.builtin.dnf:
    name: "{{ haproxy_extra_packages }}"
    state: present
  when:
    - ansible_distribution == 'Fedora'

- name: Create /etc/default/haproxy
  ansible.builtin.template:
    src: RedHat.sysconfig.j2
    dest: "/etc/sysconfig/haproxy"
    mode: "0644"
    validate: sh -n %s
  notify:
    - Restart haproxy

- name: Apply haproxy_selinux_seport
  community.general.seport:
    # XXX this is too hackish. create a role to manage selinux instead.
    ignore_selinux_state: "{{ haproxy_selinux_seport['ignore_selinux_state'] | default(omit) }}"
    ports: "{{ haproxy_selinux_seport['ports'] }}"
    proto: "{{ haproxy_selinux_seport['proto'] | default(omit) }}"
    reload: "{{ haproxy_selinux_seport['reload'] | default(omit) }}"
    setype: "{{ haproxy_selinux_seport['setype'] }}"
    state: "{{ haproxy_selinux_seport['state'] | default(omit) }}"

- name: Apply httpd_can_network_connect
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    persistent: yes
    state: yes

- name: Enable haproxy_service
  ansible.builtin.service:
    name: "{{ haproxy_service }}"
    enabled: yes
